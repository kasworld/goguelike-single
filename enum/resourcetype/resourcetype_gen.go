// Code generated by "genenum.exe -typename=ResourceType -packagename=resourcetype -basedir=enum -vectortype=int"

package resourcetype

import "fmt"

type ResourceType uint8

const (
	Ice   ResourceType = iota //
	Water                     //
	Fire                      //
	Soil                      //
	Stone                     //
	Fog                       //
	Plant                     //

	ResourceType_Count int = iota
)

var _ResourceType2string = [ResourceType_Count][2]string{
	Ice:   {"Ice", ""},
	Water: {"Water", ""},
	Fire:  {"Fire", ""},
	Soil:  {"Soil", ""},
	Stone: {"Stone", ""},
	Fog:   {"Fog", ""},
	Plant: {"Plant", ""},
}

func (e ResourceType) String() string {
	if e >= 0 && e < ResourceType(ResourceType_Count) {
		return _ResourceType2string[e][0]
	}
	return fmt.Sprintf("ResourceType%d", uint8(e))
}

func (e ResourceType) CommentString() string {
	if e >= 0 && e < ResourceType(ResourceType_Count) {
		return _ResourceType2string[e][1]
	}
	return ""
}

var _string2ResourceType = map[string]ResourceType{
	"Ice":   Ice,
	"Water": Water,
	"Fire":  Fire,
	"Soil":  Soil,
	"Stone": Stone,
	"Fog":   Fog,
	"Plant": Plant,
}

func String2ResourceType(s string) (ResourceType, bool) {
	v, b := _string2ResourceType[s]
	return v, b
}
