// Code generated by "genenum.exe -typename=TerrainCmd -packagename=terraincmd -basedir=enum -vectortype=int"

package terraincmd

import "fmt"

type TerrainCmd uint8

const (
	//  cmd argformat
	//  args must same order with GetArgs function args
	//  no need to same order with map script
	//
	//  create new terrain, must be 1st line except comment
	NewTerrain TerrainCmd = iota // name:string w:int h:int actturnboost:float
	//
	//  initial ao count
	ActiveObjectsRand // count:int
	//
	//  minimum co count on floor
	CarryObjectsRand // count:int
	//
	//  add resource
	ResourceAt           // resource:ResourceType amount:int x:int y:int
	ResourceHLine        // resource:ResourceType amount:int x:int w:int y:int
	ResourceVLine        // resource:ResourceType amount:int x:int y:int h:int
	ResourceLine         // resource:ResourceType amount:int x1:int y1:int x2:int y2:int
	ResourceRect         // resource:ResourceType amount:int x:int w:int y:int h:int
	ResourceFillRect     // resource:ResourceType amount:int x:int w:int y:int h:int
	ResourceFillEllipses // resource:ResourceType amount:int x:int w:int y:int h:int
	ResourceMazeWall     // resource:ResourceType amount:int x:int y:int w:int h:int xn:int yn:int connerfill:bool
	ResourceMazeWalk     // resource:ResourceType amount:int x:int y:int w:int h:int xn:int yn:int connerfill:bool
	ResourceRand         // resource:ResourceType mean:int stddev:int repeat:int
	ResourceFromPNG      // name:string
	//
	//  define terrain ageing
	//  before start, Millisecond per ageing (0==no ageing), reset terrain to init state after n ageing
	ResourceAgeing // initrun:int msper:int resetaftern:int
	//
	//  TileFlag is comma seperrated tile list
	//
	//  add room
	AddRoom      // bgtile:TileFlag walltile:TileFlag terrace:bool x:int y:int w:int h:int
	AddRoomMaze  // bgtile:TileFlag walltile:TileFlag terrace:bool x:int y:int w:int h:int xn:int yn:int connerfill:bool
	AddRoomsRand // bgtile:TileFlag walltile:TileFlag terrace:bool align:int count:int mean:int stddev:int
	ConnectRooms // tile:TileFlag connect:int allconnect:bool diagonal:bool
	//
	//  add tile
	TileAt           // tile:TileFlag x:int y:int
	TileHLine        // tile:TileFlag x:int w:int y:int
	TileVLine        // tile:TileFlag x:int y:int h:int
	TileLine         // tile:TileFlag x1:int y1:int x2:int y2:int
	TileRect         // tile:TileFlag x:int w:int y:int h:int
	TileFillRect     // tile:TileFlag x:int w:int y:int h:int
	TileFillEllipses // tile:TileFlag x:int w:int y:int h:int
	TileMazeWall     // tile:TileFlag x:int y:int w:int h:int xn:int yn:int connerfill:bool
	TileMazeWalk     // tile:TileFlag x:int y:int w:int h:int xn:int yn:int connerfill:bool
	//
	//  end define terrain tiles (above commands)
	FinalizeTerrain //
	//
	//  add fieldobj
	AddPortal       // x:int y:int display:FieldObjDisplayType acttype:FieldObjActType PortalID:string DstPortalID:string message:string
	AddPortalRand   // display:FieldObjDisplayType acttype:FieldObjActType PortalID:string DstPortalID:string message:string
	AddPortalInRoom // display:FieldObjDisplayType acttype:FieldObjActType PortalID:string DstPortalID:string message:string
	//
	AddRecycler       // x:int y:int display:FieldObjDisplayType message:string
	AddRecyclerRand   // count:int   display:FieldObjDisplayType message:string
	AddRecyclerInRoom // count:int   display:FieldObjDisplayType message:string
	//
	AddTrapTeleport        // x:int y:int DstFloor:string message:string
	AddTrapTeleportsRand   // count:int   DstFloor:string message:string
	AddTrapTeleportsInRoom // count:int   DstFloor:string message:string
	//
	AddTrap        // x:int y:int display:FieldObjDisplayType acttype:FieldObjActType message:string
	AddTrapsRand   // count:int   display:FieldObjDisplayType acttype:FieldObjActType message:string
	AddTrapsInRoom // count:int   display:FieldObjDisplayType acttype:FieldObjActType message:string
	//
	//  add fieldobj rotate line attack
	AddRotateLineAttack       // x:int y:int display:FieldObjDisplayType winglen:int wingcount:int degree:int perturn:int decay:DecayType message:string
	AddRotateLineAttackRand   // count:int   display:FieldObjDisplayType winglen:int wingcount:int degree:int perturn:int decay:DecayType message:string
	AddRotateLineAttackInRoom // count:int   display:FieldObjDisplayType winglen:int wingcount:int degree:int perturn:int decay:DecayType message:string
	//
	//  add Mine
	AddMine       // x:int y:int display:FieldObjDisplayType decay:DecayType message:string
	AddMineRand   // count:int   display:FieldObjDisplayType decay:DecayType message:string
	AddMineInRoom // count:int   display:FieldObjDisplayType decay:DecayType message:string
	//

	TerrainCmd_Count int = iota
)

var _TerrainCmd2string = [TerrainCmd_Count][2]string{
	NewTerrain:                {"NewTerrain", "name:string w:int h:int actturnboost:float"},
	ActiveObjectsRand:         {"ActiveObjectsRand", "count:int"},
	CarryObjectsRand:          {"CarryObjectsRand", "count:int"},
	ResourceAt:                {"ResourceAt", "resource:ResourceType amount:int x:int y:int"},
	ResourceHLine:             {"ResourceHLine", "resource:ResourceType amount:int x:int w:int y:int"},
	ResourceVLine:             {"ResourceVLine", "resource:ResourceType amount:int x:int y:int h:int"},
	ResourceLine:              {"ResourceLine", "resource:ResourceType amount:int x1:int y1:int x2:int y2:int"},
	ResourceRect:              {"ResourceRect", "resource:ResourceType amount:int x:int w:int y:int h:int"},
	ResourceFillRect:          {"ResourceFillRect", "resource:ResourceType amount:int x:int w:int y:int h:int"},
	ResourceFillEllipses:      {"ResourceFillEllipses", "resource:ResourceType amount:int x:int w:int y:int h:int"},
	ResourceMazeWall:          {"ResourceMazeWall", "resource:ResourceType amount:int x:int y:int w:int h:int xn:int yn:int connerfill:bool"},
	ResourceMazeWalk:          {"ResourceMazeWalk", "resource:ResourceType amount:int x:int y:int w:int h:int xn:int yn:int connerfill:bool"},
	ResourceRand:              {"ResourceRand", "resource:ResourceType mean:int stddev:int repeat:int"},
	ResourceFromPNG:           {"ResourceFromPNG", "name:string"},
	ResourceAgeing:            {"ResourceAgeing", "initrun:int msper:int resetaftern:int"},
	AddRoom:                   {"AddRoom", "bgtile:TileFlag walltile:TileFlag terrace:bool x:int y:int w:int h:int"},
	AddRoomMaze:               {"AddRoomMaze", "bgtile:TileFlag walltile:TileFlag terrace:bool x:int y:int w:int h:int xn:int yn:int connerfill:bool"},
	AddRoomsRand:              {"AddRoomsRand", "bgtile:TileFlag walltile:TileFlag terrace:bool align:int count:int mean:int stddev:int"},
	ConnectRooms:              {"ConnectRooms", "tile:TileFlag connect:int allconnect:bool diagonal:bool"},
	TileAt:                    {"TileAt", "tile:TileFlag x:int y:int"},
	TileHLine:                 {"TileHLine", "tile:TileFlag x:int w:int y:int"},
	TileVLine:                 {"TileVLine", "tile:TileFlag x:int y:int h:int"},
	TileLine:                  {"TileLine", "tile:TileFlag x1:int y1:int x2:int y2:int"},
	TileRect:                  {"TileRect", "tile:TileFlag x:int w:int y:int h:int"},
	TileFillRect:              {"TileFillRect", "tile:TileFlag x:int w:int y:int h:int"},
	TileFillEllipses:          {"TileFillEllipses", "tile:TileFlag x:int w:int y:int h:int"},
	TileMazeWall:              {"TileMazeWall", "tile:TileFlag x:int y:int w:int h:int xn:int yn:int connerfill:bool"},
	TileMazeWalk:              {"TileMazeWalk", "tile:TileFlag x:int y:int w:int h:int xn:int yn:int connerfill:bool"},
	FinalizeTerrain:           {"FinalizeTerrain", ""},
	AddPortal:                 {"AddPortal", "x:int y:int display:FieldObjDisplayType acttype:FieldObjActType PortalID:string DstPortalID:string message:string"},
	AddPortalRand:             {"AddPortalRand", "display:FieldObjDisplayType acttype:FieldObjActType PortalID:string DstPortalID:string message:string"},
	AddPortalInRoom:           {"AddPortalInRoom", "display:FieldObjDisplayType acttype:FieldObjActType PortalID:string DstPortalID:string message:string"},
	AddRecycler:               {"AddRecycler", "x:int y:int display:FieldObjDisplayType message:string"},
	AddRecyclerRand:           {"AddRecyclerRand", "count:int   display:FieldObjDisplayType message:string"},
	AddRecyclerInRoom:         {"AddRecyclerInRoom", "count:int   display:FieldObjDisplayType message:string"},
	AddTrapTeleport:           {"AddTrapTeleport", "x:int y:int DstFloor:string message:string"},
	AddTrapTeleportsRand:      {"AddTrapTeleportsRand", "count:int   DstFloor:string message:string"},
	AddTrapTeleportsInRoom:    {"AddTrapTeleportsInRoom", "count:int   DstFloor:string message:string"},
	AddTrap:                   {"AddTrap", "x:int y:int display:FieldObjDisplayType acttype:FieldObjActType message:string"},
	AddTrapsRand:              {"AddTrapsRand", "count:int   display:FieldObjDisplayType acttype:FieldObjActType message:string"},
	AddTrapsInRoom:            {"AddTrapsInRoom", "count:int   display:FieldObjDisplayType acttype:FieldObjActType message:string"},
	AddRotateLineAttack:       {"AddRotateLineAttack", "x:int y:int display:FieldObjDisplayType winglen:int wingcount:int degree:int perturn:int decay:DecayType message:string"},
	AddRotateLineAttackRand:   {"AddRotateLineAttackRand", "count:int   display:FieldObjDisplayType winglen:int wingcount:int degree:int perturn:int decay:DecayType message:string"},
	AddRotateLineAttackInRoom: {"AddRotateLineAttackInRoom", "count:int   display:FieldObjDisplayType winglen:int wingcount:int degree:int perturn:int decay:DecayType message:string"},
	AddMine:                   {"AddMine", "x:int y:int display:FieldObjDisplayType decay:DecayType message:string"},
	AddMineRand:               {"AddMineRand", "count:int   display:FieldObjDisplayType decay:DecayType message:string"},
	AddMineInRoom:             {"AddMineInRoom", "count:int   display:FieldObjDisplayType decay:DecayType message:string"},
}

func (e TerrainCmd) String() string {
	if e >= 0 && e < TerrainCmd(TerrainCmd_Count) {
		return _TerrainCmd2string[e][0]
	}
	return fmt.Sprintf("TerrainCmd%d", uint8(e))
}

func (e TerrainCmd) CommentString() string {
	if e >= 0 && e < TerrainCmd(TerrainCmd_Count) {
		return _TerrainCmd2string[e][1]
	}
	return ""
}

var _string2TerrainCmd = map[string]TerrainCmd{
	"NewTerrain":                NewTerrain,
	"ActiveObjectsRand":         ActiveObjectsRand,
	"CarryObjectsRand":          CarryObjectsRand,
	"ResourceAt":                ResourceAt,
	"ResourceHLine":             ResourceHLine,
	"ResourceVLine":             ResourceVLine,
	"ResourceLine":              ResourceLine,
	"ResourceRect":              ResourceRect,
	"ResourceFillRect":          ResourceFillRect,
	"ResourceFillEllipses":      ResourceFillEllipses,
	"ResourceMazeWall":          ResourceMazeWall,
	"ResourceMazeWalk":          ResourceMazeWalk,
	"ResourceRand":              ResourceRand,
	"ResourceFromPNG":           ResourceFromPNG,
	"ResourceAgeing":            ResourceAgeing,
	"AddRoom":                   AddRoom,
	"AddRoomMaze":               AddRoomMaze,
	"AddRoomsRand":              AddRoomsRand,
	"ConnectRooms":              ConnectRooms,
	"TileAt":                    TileAt,
	"TileHLine":                 TileHLine,
	"TileVLine":                 TileVLine,
	"TileLine":                  TileLine,
	"TileRect":                  TileRect,
	"TileFillRect":              TileFillRect,
	"TileFillEllipses":          TileFillEllipses,
	"TileMazeWall":              TileMazeWall,
	"TileMazeWalk":              TileMazeWalk,
	"FinalizeTerrain":           FinalizeTerrain,
	"AddPortal":                 AddPortal,
	"AddPortalRand":             AddPortalRand,
	"AddPortalInRoom":           AddPortalInRoom,
	"AddRecycler":               AddRecycler,
	"AddRecyclerRand":           AddRecyclerRand,
	"AddRecyclerInRoom":         AddRecyclerInRoom,
	"AddTrapTeleport":           AddTrapTeleport,
	"AddTrapTeleportsRand":      AddTrapTeleportsRand,
	"AddTrapTeleportsInRoom":    AddTrapTeleportsInRoom,
	"AddTrap":                   AddTrap,
	"AddTrapsRand":              AddTrapsRand,
	"AddTrapsInRoom":            AddTrapsInRoom,
	"AddRotateLineAttack":       AddRotateLineAttack,
	"AddRotateLineAttackRand":   AddRotateLineAttackRand,
	"AddRotateLineAttackInRoom": AddRotateLineAttackInRoom,
	"AddMine":                   AddMine,
	"AddMineRand":               AddMineRand,
	"AddMineInRoom":             AddMineInRoom,
}

func String2TerrainCmd(s string) (TerrainCmd, bool) {
	v, b := _string2TerrainCmd[s]
	return v, b
}
