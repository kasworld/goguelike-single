// Code generated by "genenum.exe -typename=EquipSlotType -packagename=equipslottype -basedir=enum -vectortype=int"

package equipslottype

import "fmt"

type EquipSlotType uint8

const (
	Weapon   EquipSlotType = iota //
	Shield                        //
	Helmet                        //
	Armor                         //
	Gauntlet                      //
	Footwear                      //
	Ring                          //
	Amulet                        //

	EquipSlotType_Count int = iota
)

var _EquipSlotType2string = [EquipSlotType_Count][2]string{
	Weapon:   {"Weapon", ""},
	Shield:   {"Shield", ""},
	Helmet:   {"Helmet", ""},
	Armor:    {"Armor", ""},
	Gauntlet: {"Gauntlet", ""},
	Footwear: {"Footwear", ""},
	Ring:     {"Ring", ""},
	Amulet:   {"Amulet", ""},
}

func (e EquipSlotType) String() string {
	if e >= 0 && e < EquipSlotType(EquipSlotType_Count) {
		return _EquipSlotType2string[e][0]
	}
	return fmt.Sprintf("EquipSlotType%d", uint8(e))
}

func (e EquipSlotType) CommentString() string {
	if e >= 0 && e < EquipSlotType(EquipSlotType_Count) {
		return _EquipSlotType2string[e][1]
	}
	return ""
}

var _string2EquipSlotType = map[string]EquipSlotType{
	"Weapon":   Weapon,
	"Shield":   Shield,
	"Helmet":   Helmet,
	"Armor":    Armor,
	"Gauntlet": Gauntlet,
	"Footwear": Footwear,
	"Ring":     Ring,
	"Amulet":   Amulet,
}

func String2EquipSlotType(s string) (EquipSlotType, bool) {
	v, b := _string2EquipSlotType[s]
	return v, b
}
