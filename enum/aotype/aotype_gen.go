// Code generated by "genenum.exe -typename=ActiveObjType -packagename=aotype -basedir=enum -vectortype=int"

package aotype

import "fmt"

type ActiveObjType uint8

const (
	System ActiveObjType = iota // system created
	User                        // user created and client connected

	ActiveObjType_Count int = iota
)

var _ActiveObjType2string = [ActiveObjType_Count][2]string{
	System: {"System", "system created"},
	User:   {"User", "user created and client connected"},
}

func (e ActiveObjType) String() string {
	if e >= 0 && e < ActiveObjType(ActiveObjType_Count) {
		return _ActiveObjType2string[e][0]
	}
	return fmt.Sprintf("ActiveObjType%d", uint8(e))
}

func (e ActiveObjType) CommentString() string {
	if e >= 0 && e < ActiveObjType(ActiveObjType_Count) {
		return _ActiveObjType2string[e][1]
	}
	return ""
}

var _string2ActiveObjType = map[string]ActiveObjType{
	"System": System,
	"User":   User,
}

func String2ActiveObjType(s string) (ActiveObjType, bool) {
	v, b := _string2ActiveObjType[s]
	return v, b
}
