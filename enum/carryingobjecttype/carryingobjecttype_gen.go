// Code generated by "genenum.exe -typename=CarryingObjectType -packagename=carryingobjecttype -basedir=enum -vectortype=int"

package carryingobjecttype

import "fmt"

type CarryingObjectType uint8

const (
	Equip  CarryingObjectType = iota //
	Money                            //
	Potion                           //
	Scroll                           //

	CarryingObjectType_Count int = iota
)

var _CarryingObjectType2string = [CarryingObjectType_Count][2]string{
	Equip:  {"Equip", ""},
	Money:  {"Money", ""},
	Potion: {"Potion", ""},
	Scroll: {"Scroll", ""},
}

func (e CarryingObjectType) String() string {
	if e >= 0 && e < CarryingObjectType(CarryingObjectType_Count) {
		return _CarryingObjectType2string[e][0]
	}
	return fmt.Sprintf("CarryingObjectType%d", uint8(e))
}

func (e CarryingObjectType) CommentString() string {
	if e >= 0 && e < CarryingObjectType(CarryingObjectType_Count) {
		return _CarryingObjectType2string[e][1]
	}
	return ""
}

var _string2CarryingObjectType = map[string]CarryingObjectType{
	"Equip":  Equip,
	"Money":  Money,
	"Potion": Potion,
	"Scroll": Scroll,
}

func String2CarryingObjectType(s string) (CarryingObjectType, bool) {
	v, b := _string2CarryingObjectType[s]
	return v, b
}
