// Code generated by "genenum.exe -typename=ClientControlType -packagename=clientcontroltype -basedir=enum"

package clientcontroltype

import "fmt"

type ClientControlType uint8

const (
	Keyboard    ClientControlType = iota //
	FollowMouse                          //
	MoveToDest                           //

	ClientControlType_Count int = iota
)

var _ClientControlType2string = [ClientControlType_Count][2]string{
	Keyboard:    {"Keyboard", ""},
	FollowMouse: {"FollowMouse", ""},
	MoveToDest:  {"MoveToDest", ""},
}

func (e ClientControlType) String() string {
	if e >= 0 && e < ClientControlType(ClientControlType_Count) {
		return _ClientControlType2string[e][0]
	}
	return fmt.Sprintf("ClientControlType%d", uint8(e))
}

func (e ClientControlType) CommentString() string {
	if e >= 0 && e < ClientControlType(ClientControlType_Count) {
		return _ClientControlType2string[e][1]
	}
	return ""
}

var _string2ClientControlType = map[string]ClientControlType{
	"Keyboard":    Keyboard,
	"FollowMouse": FollowMouse,
	"MoveToDest":  MoveToDest,
}

func String2ClientControlType(s string) (ClientControlType, bool) {
	v, b := _string2ClientControlType[s]
	return v, b
}
