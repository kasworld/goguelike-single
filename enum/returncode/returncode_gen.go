// Code generated by "genenum.exe -typename=ReturnCode -packagename=returncode -basedir=enum -vectortype=int"

package returncode

import "fmt"

type ReturnCode uint8

const (
	Success                ReturnCode = iota //
	MoveBlockedByActiveObj                   //
	MoveBlockedByTile                        //
	InsufficientSP                           //
	FailByDeath                              //
	InvalidDirection                         //
	ActionProhibited                         //
	ObjectNotFound                           //
	ActionChanged                            //
	ActionCanceled                           //
	//

	ReturnCode_Count int = iota
)

var _ReturnCode2string = [ReturnCode_Count][2]string{
	Success:                {"Success", ""},
	MoveBlockedByActiveObj: {"MoveBlockedByActiveObj", ""},
	MoveBlockedByTile:      {"MoveBlockedByTile", ""},
	InsufficientSP:         {"InsufficientSP", ""},
	FailByDeath:            {"FailByDeath", ""},
	InvalidDirection:       {"InvalidDirection", ""},
	ActionProhibited:       {"ActionProhibited", ""},
	ObjectNotFound:         {"ObjectNotFound", ""},
	ActionChanged:          {"ActionChanged", ""},
	ActionCanceled:         {"ActionCanceled", ""},
}

func (e ReturnCode) String() string {
	if e >= 0 && e < ReturnCode(ReturnCode_Count) {
		return _ReturnCode2string[e][0]
	}
	return fmt.Sprintf("ReturnCode%d", uint8(e))
}

func (e ReturnCode) CommentString() string {
	if e >= 0 && e < ReturnCode(ReturnCode_Count) {
		return _ReturnCode2string[e][1]
	}
	return ""
}

var _string2ReturnCode = map[string]ReturnCode{
	"Success":                Success,
	"MoveBlockedByActiveObj": MoveBlockedByActiveObj,
	"MoveBlockedByTile":      MoveBlockedByTile,
	"InsufficientSP":         InsufficientSP,
	"FailByDeath":            FailByDeath,
	"InvalidDirection":       InvalidDirection,
	"ActionProhibited":       ActionProhibited,
	"ObjectNotFound":         ObjectNotFound,
	"ActionChanged":          ActionChanged,
	"ActionCanceled":         ActionCanceled,
}

func String2ReturnCode(s string) (ReturnCode, bool) {
	v, b := _string2ReturnCode[s]
	return v, b
}
