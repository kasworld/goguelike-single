// Code generated by "genenum.exe -typename=DecayType -packagename=decaytype -basedir=enum"

package decaytype

import "fmt"

type DecayType uint8

const (
	Decrease DecayType = iota // decrease affectrate as wing end
	Even                      // no change affectrate
	Increase                  // increase affectrate as wing end

	DecayType_Count int = iota
)

var _DecayType2string = [DecayType_Count][2]string{
	Decrease: {"Decrease", "decrease affectrate as wing end"},
	Even:     {"Even", "no change affectrate"},
	Increase: {"Increase", "increase affectrate as wing end"},
}

func (e DecayType) String() string {
	if e >= 0 && e < DecayType(DecayType_Count) {
		return _DecayType2string[e][0]
	}
	return fmt.Sprintf("DecayType%d", uint8(e))
}

func (e DecayType) CommentString() string {
	if e >= 0 && e < DecayType(DecayType_Count) {
		return _DecayType2string[e][1]
	}
	return ""
}

var _string2DecayType = map[string]DecayType{
	"Decrease": Decrease,
	"Even":     Even,
	"Increase": Increase,
}

func String2DecayType(s string) (DecayType, bool) {
	v, b := _string2DecayType[s]
	return v, b
}
