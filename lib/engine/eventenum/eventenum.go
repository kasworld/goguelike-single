package eventenum

type EventName string

// OnExit is the event generated by Application when the user
// tries to close the window (desktop) or the Exit() method is called.
const OnExit = EventName("app.OnExit")

// Node events.
const (
	// Dispatched when a descendent is added or removed
	OnDescendant = EventName("node.OnDescendant")
)

const OnWindowClose = EventName("gui.OnWindowClose")

// Window event names. See availability per platform below ("x" indicates available).
const ( //                             Desktop | Browser |
	OnWindowPos  = EventName("w.OnWindowPos")  //    x    |         |
	OnWindowSize = EventName("w.OnWindowSize") //    x    |         |
	OnKeyUp      = EventName("w.OnKeyUp")      //    x    |    x    |
	OnKeyDown    = EventName("w.OnKeyDown")    //    x    |    x    |
	OnKeyRepeat  = EventName("w.OnKeyRepeat")  //    x    |         |
	OnChar       = EventName("w.OnChar")       //    x    |    x    |
	OnCursor     = EventName("w.OnCursor")     //    x    |    x    |
	OnMouseUp    = EventName("w.OnMouseUp")    //    x    |    x    |
	OnMouseDown  = EventName("w.OnMouseDown")  //    x    |    x    |
	OnScroll     = EventName("w.OnScroll")     //    x    |    x    |
)

// Core events sent by the GUI manager.
// The target panel is the panel immediately under the mouse cursor.
const (

	// Events sent to all panels except the ancestors of the target panel
	OnMouseDownOut = EventName("gui.OnMouseDownOut") // Any mouse button is pressed
	OnMouseUpOut   = EventName("gui.OnMouseUpOut")   // Any mouse button is released

	// Event sent to new target panel and all of its ancestors up to
	// (not including) the common ancestor of the new and old targets
	// Cursor entered the panel or a descendant
	OnCursorEnter = EventName("gui.OnCursorEnter")
	// Event sent to old target panel and all of its ancestors up to
	// (not including) the common ancestor of the new and old targets
	// Cursor left the panel or a descendant
	OnCursorLeave = EventName("gui.OnCursorLeave")

	// Event sent to the new key-focused DispatcherI,
	// specified on a call to gui.Manager().SetKeyFocus(DispatcherI)
	// All keyboard events will be exclusively sent to the receiving DispatcherI
	OnFocus = EventName("gui.OnFocus")
	// Event sent to the previous key-focused DispatcherI when another panel is key-focused
	// Keyboard events will stop being sent to the receiving DispatcherI
	OnFocusLost = EventName("gui.OnFocusLost")
)

const (
	// Panel size changed (no parameters)
	OnResize = EventName("gui.OnResize")
	// Panel enabled/disabled (no parameters)
	OnEnable = EventName("gui.OnEnable")
	// Widget clicked by mouse left button or via key press
	OnClick = EventName("gui.OnClick")
	// Value was changed. Emitted by List, DropDownList, CheckBox and Edit
	OnChange = EventName("gui.OnChange")
	// Radio button within a group changed state
	OnRadioGroup = EventName("gui.OnRadioGroup")
)

const (
	// OnTableClick is the event generated when the table is right or left clicked
	// Parameter is TableClickEvent
	OnTableClick = EventName("onTableClick")
	// OnTableRowCount is the event generated when the table row count changes (no parameters)
	OnTableRowCount = EventName("onTableRowCount")
)

const (
	// Dispatched after a body has gone in to the sleepy state.
	SleepyEvent = EventName("physics.SleepyEvent")
	// Dispatched after a body has fallen asleep.
	SleepEvent = EventName("physics.SleepEvent")
	// Dispatched after a sleeping body has woken up.
	WakeUpEvent = EventName("physics.WakeUpEvent")
	// Dispatched after two bodies collide.
	// This event is dispatched on each of the two bodies involved in the collision.
	CollideEvent = EventName("physics.CollideEvent")
)

const (
	BeginContactEvent = EventName("physics.BeginContactEvent")
	EndContactEvent   = EventName("physics.EndContactEvent")
	CollisionEv       = EventName("physics.Collision")
)

// OnListItemResize is the identifier of the event dispatched when a ListItem's child panel is resized
const OnListItemResize = EventName("gui.OnListItemResize")
