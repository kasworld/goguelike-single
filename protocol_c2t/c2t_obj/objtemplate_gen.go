// Code generated by "genprotocol.exe -ver=2ac7ac69120d10cefa55d02b4dc610a33d5994ff1218aea5c255601ad7ab3a19 -basedir=protocol_c2t -prefix=c2t -statstype=int"

package c2t_obj

/* protocol object template

// AchieveInfo
type ReqAchieveInfo_data struct {
	Dummy uint8 // change as you need
}
// AchieveInfo
type RspAchieveInfo_data struct {
	Dummy uint8 // change as you need
}

// Rebirth
type ReqRebirth_data struct {
	Dummy uint8 // change as you need
}
// Rebirth
type RspRebirth_data struct {
	Dummy uint8 // change as you need
}

// MoveFloor tower cmd
type ReqMoveFloor_data struct {
	Dummy uint8 // change as you need
}
// MoveFloor tower cmd
type RspMoveFloor_data struct {
	Dummy uint8 // change as you need
}

// AIPlay
type ReqAIPlay_data struct {
	Dummy uint8 // change as you need
}
// AIPlay
type RspAIPlay_data struct {
	Dummy uint8 // change as you need
}

// VisitFloorList floor info of visited
type ReqVisitFloorList_data struct {
	Dummy uint8 // change as you need
}
// VisitFloorList floor info of visited
type RspVisitFloorList_data struct {
	Dummy uint8 // change as you need
}

// PassTurn no action just trigger turn
type ReqPassTurn_data struct {
	Dummy uint8 // change as you need
}
// PassTurn no action just trigger turn
type RspPassTurn_data struct {
	Dummy uint8 // change as you need
}

// Meditate rest and recover HP,SP
type ReqMeditate_data struct {
	Dummy uint8 // change as you need
}
// Meditate rest and recover HP,SP
type RspMeditate_data struct {
	Dummy uint8 // change as you need
}

// KillSelf
type ReqKillSelf_data struct {
	Dummy uint8 // change as you need
}
// KillSelf
type RspKillSelf_data struct {
	Dummy uint8 // change as you need
}

// Move move 8way near tile
type ReqMove_data struct {
	Dummy uint8 // change as you need
}
// Move move 8way near tile
type RspMove_data struct {
	Dummy uint8 // change as you need
}

// Attack attack near 1 tile
type ReqAttack_data struct {
	Dummy uint8 // change as you need
}
// Attack attack near 1 tile
type RspAttack_data struct {
	Dummy uint8 // change as you need
}

// AttackWide attack near 3 tile
type ReqAttackWide_data struct {
	Dummy uint8 // change as you need
}
// AttackWide attack near 3 tile
type RspAttackWide_data struct {
	Dummy uint8 // change as you need
}

// AttackLong attack 3 tile to direction
type ReqAttackLong_data struct {
	Dummy uint8 // change as you need
}
// AttackLong attack 3 tile to direction
type RspAttackLong_data struct {
	Dummy uint8 // change as you need
}

// Pickup pickup carryobj
type ReqPickup_data struct {
	Dummy uint8 // change as you need
}
// Pickup pickup carryobj
type RspPickup_data struct {
	Dummy uint8 // change as you need
}

// Drop drop carryobj
type ReqDrop_data struct {
	Dummy uint8 // change as you need
}
// Drop drop carryobj
type RspDrop_data struct {
	Dummy uint8 // change as you need
}

// Equip equip equipable carryobj
type ReqEquip_data struct {
	Dummy uint8 // change as you need
}
// Equip equip equipable carryobj
type RspEquip_data struct {
	Dummy uint8 // change as you need
}

// UnEquip unequip equipable carryobj
type ReqUnEquip_data struct {
	Dummy uint8 // change as you need
}
// UnEquip unequip equipable carryobj
type RspUnEquip_data struct {
	Dummy uint8 // change as you need
}

// DrinkPotion
type ReqDrinkPotion_data struct {
	Dummy uint8 // change as you need
}
// DrinkPotion
type RspDrinkPotion_data struct {
	Dummy uint8 // change as you need
}

// ReadScroll
type ReqReadScroll_data struct {
	Dummy uint8 // change as you need
}
// ReadScroll
type RspReadScroll_data struct {
	Dummy uint8 // change as you need
}

// Recycle sell carryobj
type ReqRecycle_data struct {
	Dummy uint8 // change as you need
}
// Recycle sell carryobj
type RspRecycle_data struct {
	Dummy uint8 // change as you need
}

// EnterPortal
type ReqEnterPortal_data struct {
	Dummy uint8 // change as you need
}
// EnterPortal
type RspEnterPortal_data struct {
	Dummy uint8 // change as you need
}

// ActTeleport
type ReqActTeleport_data struct {
	Dummy uint8 // change as you need
}
// ActTeleport
type RspActTeleport_data struct {
	Dummy uint8 // change as you need
}

// AdminFloorMove Next Before floorUUID
type ReqAdminFloorMove_data struct {
	Dummy uint8 // change as you need
}
// AdminFloorMove Next Before floorUUID
type RspAdminFloorMove_data struct {
	Dummy uint8 // change as you need
}

// AdminTeleport random pos in floor
type ReqAdminTeleport_data struct {
	Dummy uint8 // change as you need
}
// AdminTeleport random pos in floor
type RspAdminTeleport_data struct {
	Dummy uint8 // change as you need
}

// AdminAddExp  add arg to battle exp
type ReqAdminAddExp_data struct {
	Dummy uint8 // change as you need
}
// AdminAddExp  add arg to battle exp
type RspAdminAddExp_data struct {
	Dummy uint8 // change as you need
}

// AdminPotionEffect buff by arg potion type
type ReqAdminPotionEffect_data struct {
	Dummy uint8 // change as you need
}
// AdminPotionEffect buff by arg potion type
type RspAdminPotionEffect_data struct {
	Dummy uint8 // change as you need
}

// AdminScrollEffect buff by arg Scroll type
type ReqAdminScrollEffect_data struct {
	Dummy uint8 // change as you need
}
// AdminScrollEffect buff by arg Scroll type
type RspAdminScrollEffect_data struct {
	Dummy uint8 // change as you need
}

// AdminCondition add arg condition for 100 turn
type ReqAdminCondition_data struct {
	Dummy uint8 // change as you need
}
// AdminCondition add arg condition for 100 turn
type RspAdminCondition_data struct {
	Dummy uint8 // change as you need
}

// AdminAddPotion add arg potion to inven
type ReqAdminAddPotion_data struct {
	Dummy uint8 // change as you need
}
// AdminAddPotion add arg potion to inven
type RspAdminAddPotion_data struct {
	Dummy uint8 // change as you need
}

// AdminAddScroll add arg scroll to inven
type ReqAdminAddScroll_data struct {
	Dummy uint8 // change as you need
}
// AdminAddScroll add arg scroll to inven
type RspAdminAddScroll_data struct {
	Dummy uint8 // change as you need
}

// AdminAddMoney add arg money to inven
type ReqAdminAddMoney_data struct {
	Dummy uint8 // change as you need
}
// AdminAddMoney add arg money to inven
type RspAdminAddMoney_data struct {
	Dummy uint8 // change as you need
}

// AdminAddEquip add random equip to inven
type ReqAdminAddEquip_data struct {
	Dummy uint8 // change as you need
}
// AdminAddEquip add random equip to inven
type RspAdminAddEquip_data struct {
	Dummy uint8 // change as you need
}

// AdminForgetFloor forget current floor map
type ReqAdminForgetFloor_data struct {
	Dummy uint8 // change as you need
}
// AdminForgetFloor forget current floor map
type RspAdminForgetFloor_data struct {
	Dummy uint8 // change as you need
}

// AdminFloorMap complete current floor map
type ReqAdminFloorMap_data struct {
	Dummy uint8 // change as you need
}
// AdminFloorMap complete current floor map
type RspAdminFloorMap_data struct {
	Dummy uint8 // change as you need
}

// EnterFloor
type NotiEnterFloor_data struct {
	Dummy uint8 // change as you need
}

// LeaveFloor
type NotiLeaveFloor_data struct {
	Dummy uint8 // change as you need
}

// Ageing          // floor
type NotiAgeing_data struct {
	Dummy uint8 // change as you need
}

// Death
type NotiDeath_data struct {
	Dummy uint8 // change as you need
}

// ReadyToRebirth
type NotiReadyToRebirth_data struct {
	Dummy uint8 // change as you need
}

// Rebirthed
type NotiRebirthed_data struct {
	Dummy uint8 // change as you need
}

// VPObjList       // in viewport, every turn
type NotiVPObjList_data struct {
	Dummy uint8 // change as you need
}

// VPTiles         // in viewport, when viewport changed only
type NotiVPTiles_data struct {
	Dummy uint8 // change as you need
}

// FloorTiles      // for rebuild known floor
type NotiFloorTiles_data struct {
	Dummy uint8 // change as you need
}

// FieldObjList    // for rebuild known floor
type NotiFieldObjList_data struct {
	Dummy uint8 // change as you need
}

// FoundFieldObj   // hidden field obj
type NotiFoundFieldObj_data struct {
	Dummy uint8 // change as you need
}

// ForgetFloor
type NotiForgetFloor_data struct {
	Dummy uint8 // change as you need
}

// ActivateTrap
type NotiActivateTrap_data struct {
	Dummy uint8 // change as you need
}

*/
