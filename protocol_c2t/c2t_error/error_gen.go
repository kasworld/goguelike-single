// Code generated by "genprotocol.exe -ver=311f4dbd137e36f36978fbd8d92db3e25cfad1a4fdf4e54ab2fa7905b077600d -basedir=protocol_c2t -prefix=c2t -statstype=int"

package c2t_error

import "fmt"

type ErrorCode uint16 // use in packet header, DO NOT CHANGE
const (
	None                   ErrorCode = iota //
	MoveBlockedByActiveObj                  //
	MoveBlockedByTile                       //
	InsufficientSP                          //
	FailByDeath                             //
	InvalidDirection                        //
	ActionProhibited                        //
	ObjectNotFound                          //
	ActionChanged                           //
	ActionCanceled                          //

	ErrorCode_Count int = iota
)

var _ErrorCode2string = [ErrorCode_Count][2]string{
	None:                   {"None", ""},
	MoveBlockedByActiveObj: {"MoveBlockedByActiveObj", ""},
	MoveBlockedByTile:      {"MoveBlockedByTile", ""},
	InsufficientSP:         {"InsufficientSP", ""},
	FailByDeath:            {"FailByDeath", ""},
	InvalidDirection:       {"InvalidDirection", ""},
	ActionProhibited:       {"ActionProhibited", ""},
	ObjectNotFound:         {"ObjectNotFound", ""},
	ActionChanged:          {"ActionChanged", ""},
	ActionCanceled:         {"ActionCanceled", ""},
}

func (e ErrorCode) String() string {
	if e >= 0 && e < ErrorCode(ErrorCode_Count) {
		return _ErrorCode2string[e][0]
	}
	return fmt.Sprintf("ErrorCode%d", uint16(e))
}
func (e ErrorCode) CommentString() string {
	if e >= 0 && e < ErrorCode(ErrorCode_Count) {
		return _ErrorCode2string[e][1]
	}
	return ""
}

// implement error interface
func (e ErrorCode) Error() string {
	return "c2t_error." + e.String()
}

var _string2ErrorCode = map[string]ErrorCode{
	"None":                   None,
	"MoveBlockedByActiveObj": MoveBlockedByActiveObj,
	"MoveBlockedByTile":      MoveBlockedByTile,
	"InsufficientSP":         InsufficientSP,
	"FailByDeath":            FailByDeath,
	"InvalidDirection":       InvalidDirection,
	"ActionProhibited":       ActionProhibited,
	"ObjectNotFound":         ObjectNotFound,
	"ActionChanged":          ActionChanged,
	"ActionCanceled":         ActionCanceled,
}

func String2ErrorCode(s string) (ErrorCode, bool) {
	v, b := _string2ErrorCode[s]
	return v, b
}
